# Makefile para SQL Web Console
# Comandos √∫tiles para gestionar la aplicaci√≥n Docker

.PHONY: help build up down restart logs clean install ssl dev prod

# Variables
COMPOSE_DEV = docker-compose -f docker-compose.yml -f docker-compose.override.yml
COMPOSE_PROD = docker-compose -f docker-compose.prod.yml

# Comando por defecto
help:
	@echo "SQL Web Console - Comandos disponibles:"
	@echo ""
	@echo "Desarrollo:"
	@echo "  make dev        - Levantar entorno de desarrollo"
	@echo "  make build      - Construir im√°genes Docker"
	@echo "  make up         - Levantar contenedores"
	@echo "  make down       - Detener contenedores"
	@echo "  make restart    - Reiniciar contenedores"
	@echo "  make logs       - Ver logs de los contenedores"
	@echo "  make clean      - Limpiar contenedores y vol√∫menes"
	@echo ""
	@echo "Producci√≥n:"
	@echo "  make prod       - Levantar entorno de producci√≥n"
	@echo "  make ssl        - Generar certificados SSL de desarrollo"
	@echo ""
	@echo "Instalaci√≥n:"
	@echo "  make install    - Instalaci√≥n completa inicial"
	@echo ""
	@echo "Accesos:"
	@echo "  - Aplicaci√≥n:   http://localhost:8080"
	@echo "  - phpMyAdmin:   http://localhost:8081"
	@echo "  - MySQL:        localhost:3306"

# Desarrollo
dev: build up
	@echo "üöÄ Entorno de desarrollo iniciado"
	@echo "üì± Aplicaci√≥n: http://localhost:8080"
	@echo "üóÑÔ∏è  phpMyAdmin: http://localhost:8081"
	@echo "üîë Usuario admin creado autom√°ticamente"

build:
	@echo "üî® Construyendo im√°genes Docker..."
	$(COMPOSE_DEV) build

up:
	@echo "‚¨ÜÔ∏è  Levantando contenedores..."
	$(COMPOSE_DEV) up -d

down:
	@echo "‚¨áÔ∏è  Deteniendo contenedores..."
	$(COMPOSE_DEV) down

restart:
	@echo "üîÑ Reiniciando contenedores..."
	$(COMPOSE_DEV) restart

logs:
	@echo "üìã Mostrando logs..."
	$(COMPOSE_DEV) logs -f

# Producci√≥n
prod: ssl
	@echo "üè≠ Configurando entorno de producci√≥n..."
	@echo "‚ö†Ô∏è  Aseg√∫rate de configurar las variables de entorno:"
	@echo "   - MYSQL_ROOT_PASSWORD"
	@echo "   - MYSQL_USER"
	@echo "   - MYSQL_PASSWORD"
	@echo "   - APP_SECRET_KEY"
	@echo "   - JWT_SECRET_KEY"
	$(COMPOSE_PROD) up -d

# SSL
ssl:
	@echo "üîí Generando certificados SSL..."
	@chmod +x docker/scripts/generate-ssl.sh
	@./docker/scripts/generate-ssl.sh

# Limpieza
clean:
	@echo "üßπ Limpiando contenedores y vol√∫menes..."
	$(COMPOSE_DEV) down -v
	$(COMPOSE_PROD) down -v
	docker system prune -f
	@echo "‚úÖ Limpieza completada"

# Instalaci√≥n completa
install: ssl dev
	@echo ""
	@echo "üéâ Instalaci√≥n completada!"
	@echo ""
	@echo "üì± Accesos:"
	@echo "   - Aplicaci√≥n:   http://localhost:8080"
	@echo "   - phpMyAdmin:   http://localhost:8081"
	@echo ""
	@echo "üîë Credenciales por defecto:"
	@echo "   - Usuario: admin"
	@echo "   - Token: Se genera autom√°ticamente (revisa los logs)"
	@echo ""
	@echo "üìã Pr√≥ximos pasos:"
	@echo "   1. Accede a http://localhost:8080"
	@echo "   2. Inicia sesi√≥n con el usuario 'admin'"
	@echo "   3. El token se muestra en los logs del contenedor"
	@echo "   4. Crea tokens adicionales desde la interfaz"
	@echo ""
	@echo "üìù Para ver los logs: make logs"

# Comandos adicionales
status:
	@echo "üìä Estado de los contenedores:"
	$(COMPOSE_DEV) ps

shell:
	@echo "üêö Abriendo shell en el contenedor de la aplicaci√≥n..."
	$(COMPOSE_DEV) exec app bash

mysql:
	@echo "üóÑÔ∏è  Conectando a MySQL..."
	$(COMPOSE_DEV) exec mysql mysql -u root -ppassword sql_console

backup:
	@echo "üíæ Creando backup de la base de datos..."
	@mkdir -p backups
	$(COMPOSE_DEV) exec mysql mysqldump -u root -ppassword sql_console > backups/backup_$(shell date +%Y%m%d_%H%M%S).sql
	@echo "‚úÖ Backup creado en backups/"

restore:
	@echo "üì• Restaurando backup..."
	@if [ -z "$(FILE)" ]; then \
		echo "‚ùå Especifica el archivo de backup: make restore FILE=backups/backup_20231201_120000.sql"; \
		exit 1; \
	fi
	$(COMPOSE_DEV) exec -T mysql mysql -u root -ppassword sql_console < $(FILE)
	@echo "‚úÖ Backup restaurado"

# Variables de entorno
env-example:
	@echo "üìù Creando archivo .env de ejemplo..."
	@cat > .env.example << EOF
# Configuraci√≥n de MySQL
MYSQL_ROOT_PASSWORD=tu_password_seguro
MYSQL_USER=sqluser
MYSQL_PASSWORD=sqlpass
MYSQL_DATABASE=sql_console

# Configuraci√≥n de seguridad
APP_SECRET_KEY=tu_app_secret_key_aqui
JWT_SECRET_KEY=tu_jwt_secret_key_aqui
TOKEN_EXPIRY_HOURS=24

# Configuraci√≥n de puertos
APP_PORT=80
NGINX_PORT=80
NGINX_SSL_PORT=443
EOF
	@echo "‚úÖ Archivo .env.example creado"
	@echo "üìù Copia .env.example a .env y edita las variables" 